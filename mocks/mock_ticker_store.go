// Code generated by MockGen. DO NOT EDIT.
// Source: ti—Åker_store.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	interfaces "github.com/dimryb/cross-arb/internal/interface"
	types "github.com/dimryb/cross-arb/internal/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockTickerStore is a mock of TickerStore interface.
type MockTickerStore struct {
	ctrl     *gomock.Controller
	recorder *MockTickerStoreMockRecorder
}

// MockTickerStoreMockRecorder is the mock recorder for MockTickerStore.
type MockTickerStoreMockRecorder struct {
	mock *MockTickerStore
}

// NewMockTickerStore creates a new mock instance.
func NewMockTickerStore(ctrl *gomock.Controller) *MockTickerStore {
	mock := &MockTickerStore{ctrl: ctrl}
	mock.recorder = &MockTickerStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTickerStore) EXPECT() *MockTickerStoreMockRecorder {
	return m.recorder
}

// AddSubscriber mocks base method.
func (m *MockTickerStore) AddSubscriber() interfaces.TickerSubscriber {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSubscriber")
	ret0, _ := ret[0].(interfaces.TickerSubscriber)
	return ret0
}

// AddSubscriber indicates an expected call of AddSubscriber.
func (mr *MockTickerStoreMockRecorder) AddSubscriber() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSubscriber", reflect.TypeOf((*MockTickerStore)(nil).AddSubscriber))
}

// GetAll mocks base method.
func (m *MockTickerStore) GetAll() []types.TickerData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]types.TickerData)
	return ret0
}

// GetAll indicates an expected call of GetAll.
func (mr *MockTickerStoreMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockTickerStore)(nil).GetAll))
}

// Set mocks base method.
func (m *MockTickerStore) Set(t types.TickerData) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", t)
}

// Set indicates an expected call of Set.
func (mr *MockTickerStoreMockRecorder) Set(t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockTickerStore)(nil).Set), t)
}
